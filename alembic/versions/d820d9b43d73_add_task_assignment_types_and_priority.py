"""add_task_assignment_types_and_priority

Revision ID: d820d9b43d73
Revises: aa9a3f66164a
Create Date: 2025-06-13 00:43:04.576955

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd820d9b43d73'
down_revision: Union[str, None] = 'aa9a3f66164a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Create the enum types first
    taskpriority_enum = sa.Enum('CRITICAL', 'HIGH', 'MEDIUM', 'LOW', name='taskpriority')
    taskpriority_enum.create(op.get_bind())
    
    assignmenttype_enum = sa.Enum('ADMIN_ASSIGNED', 'GENERAL_POOL', name='assignmenttype')
    assignmenttype_enum.create(op.get_bind())
    
    # Step 2: Add columns with default values for existing records
    op.add_column('tasks', sa.Column('priority', taskpriority_enum, nullable=False, server_default='MEDIUM'))
    op.add_column('tasks', sa.Column('assignment_type', assignmenttype_enum, nullable=False, server_default='ADMIN_ASSIGNED'))
    op.add_column('tasks', sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, server_default=sa.text('NOW()')))
    op.add_column('tasks', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, server_default=sa.text('NOW()')))
    
    # Step 3: Handle created_by_id (nullable first, then update)
    op.add_column('tasks', sa.Column('created_by_id', sa.UUID(), nullable=True))
    
    # Step 4: Update existing tasks to have created_by_id = project owner
    connection = op.get_bind()
    connection.execute(sa.text("""
        UPDATE tasks 
        SET created_by_id = (
            SELECT owner_id 
            FROM projects 
            WHERE projects.id = tasks.project_id
        )
        WHERE created_by_id IS NULL
    """))
    
    # Step 5: Make created_by_id NOT NULL and add foreign key
    op.alter_column('tasks', 'created_by_id', nullable=False)
    op.create_foreign_key('fk_tasks_created_by', 'tasks', 'users', ['created_by_id'], ['id'])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Remove foreign key constraint
    op.drop_constraint('fk_tasks_created_by', 'tasks', type_='foreignkey')
    
    # Remove columns
    op.drop_column('tasks', 'created_by_id')
    op.drop_column('tasks', 'updated_at')
    op.drop_column('tasks', 'created_at')
    op.drop_column('tasks', 'assignment_type')
    op.drop_column('tasks', 'priority')
    
    # Drop enum types
    sa.Enum(name='assignmenttype').drop(op.get_bind())
    sa.Enum(name='taskpriority').drop(op.get_bind())
    
    # ### end Alembic commands ###
